{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\up202000782\Downloads\ECOLET_18_01854_replication\ECOLET_18_01854_v3.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 3 Dec 2020, 10:35:34
{txt}
{com}. 
. 
. /// Load data ///
> 
. use ECOLET_18_01854, clear //  n=2929 cities (cities with a lame-duck mayor in 2004-08 term were dropped) 
{txt}
{com}. 
. 
. /// Create key variables ///
> 
. *distance to population cutoffs
. g dist=. 
{txt}(2,929 missing values generated)

{com}. replace dist=population-70  if state!=35  // all states except Sao Paulo
{txt}(2,592 real changes made)

{com}. replace dist=population-100 if state==35  // Sao Paulo State
{txt}(337 real changes made)

{com}. lab var dist "distance to population cutoffs (in 000s residents)"
{txt}
{com}. 
. *Farmacia Popular eligibility dummy
. g fpeligible=0      
{txt}
{com}. replace fpeligible=1 if population>=100 &  state==35 & population!=.
{txt}(38 real changes made)

{com}. replace fpeligible=1 if population>=70  &  state!=35 & population!=.
{txt}(156 real changes made)

{com}. lab var fpeligible "eligible for Farmacia Popular"
{txt}
{com}. 
. *generate spline polinomial  
. g dist_fpeligible=dist*fpeligible       
{txt}
{com}.  
.  
.  
. /// Replication of Table 1 /// 
> 
. **Replication of columns 1-4**   
. 
. /* foreach bwmethod in CV IK  {c -(}
> preserve 
> rdbwselect_2014 votes_share_08 dist, c(0) p(1) kernel(tri) bwselect("`bwmethod'") 
> loc bw=round(e(h_`bwmethod'))
> drop if dist>`bw'
> drop if dist<-`bw'
> 
> *Panel A. OLS estimates
> reg votes_share_04 fpcomplier dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelA_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> reg votes_share_08 fpcomplier dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelA_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> 
> *Panel B. Reduced-form estimates (sharp regression discontinuity design)
> reg votes_share_04 fpeligible dist dist_fpeligible, r cluster(state)
> outreg2 fpeligible using "Table1_PanelB_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> reg votes_share_08 fpeligible dist dist_fpeligible, r cluster(state)
> outreg2 fpeligible using "Table1_PanelB_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> 
> *Panel C. 2SLS estimates (fuzzy regression discontinuity design) 
> ivreg2 votes_share_04 (fpcomplier=fpeligible) dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelC_2SLS_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> ivreg2 votes_share_08 (fpcomplier=fpeligible) dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelC_2SLS_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> reg fpcomplier fpeligible dist dist_fpeligible, r cluster(state) 
> outreg2 fpeligible using "Table1_PanelC_firststage_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> restore
> {c )-}
> 
> 
> **Replication of columns 5-6**   
> 
> foreach bwmethod in cerrd  {c -(}
> preserve 
> rdbwselect votes_share_08 dist, c(0) p(1) kernel(tri) bwselect("`bwmethod'") 
> loc bw=round(e(h_`bwmethod'))
> drop if dist>`bw'
> drop if dist<-`bw'
> 
> *Panel A. OLS estimates
> reg votes_share_04 fpcomplier dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelA_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> reg votes_share_08 fpcomplier dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelA_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> 
> *Panel B. Reduced-form estimates (sharp regression discontinuity design)
> reg votes_share_04 fpeligible dist dist_fpeligible, r cluster(state)
> outreg2 fpeligible using "Table1_PanelB_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> reg votes_share_08 fpeligible dist dist_fpeligible, r cluster(state)
> outreg2 fpeligible using "Table1_PanelB_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> 
> *Panel C. 2SLS estimates (fuzzy regression discontinuity design) 
> ivreg2 votes_share_04 (fpcomplier=fpeligible) dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelC_2SLS_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> ivreg2 votes_share_08 (fpcomplier=fpeligible) dist dist_fpeligible, r cluster(state)
> outreg2 fpcomplier using "Table1_PanelC_2SLS_`bwmethod'.xls", append  se slow(1000) nocons lab dec(5) 
> 
> reg fpcomplier fpeligible dist dist_fpeligible, r cluster(state) 
> outreg2 fpeligible using "Table1_PanelC_firststage_`bwmethod'.xls", replace  se slow(1000) nocons lab dec(5) 
> 
> restore
> {c )-} */
. 
. 
. 
. /// Replication of Figure 1 /// 
> 
. g fpcomplier100=fpcomplier*100
{txt}
{com}. cmogram fpcomplier100 dist if dist<=100 & dist>=-100, cut(0) cutright scatter line(0) histopts(bin(10)) graphopts(ytitle(cities with Farmacia Popular (%)) xtitle(distance to eligibility threshold (000s inhabitants)))  

Plotting mean of fpcomplier100, conditional on dist.

n = 2857

Bin #1: [-98.98000335693359,-89.10530319213868) (n = 172) (mean = 0)
Bin #2: [-89.10530319213868,-79.23060302734376) (n = 62) (mean = 0)
Bin #3: [-79.23060302734376,-69.35590286254885) (n = 22) (mean = 0)
Bin #4: [-69.35590286254885,-59.48120269775392) (n = 1326) (mean = 0)
Bin #5: [-59.48120269775392,-49.606502532959) (n = 662) (mean = 0)
Bin #6: [-49.606502532959,-39.73180236816408) (n = 276) (mean = 0)
Bin #7: [-39.73180236816408,-29.85710220336916) (n = 129) (mean = 0)
Bin #8: [-29.85710220336916,-19.98240203857424) (n = 54) (mean = 0)
Bin #9: [-19.98240203857424,-10.10770187377932) (n = 16) (mean = 0)
Bin #10: [-10.10770187377932,-.233001708984375) (n = 15) (mean = 0)
Bin #1: [0,9.953199768066407) (n = 23) (mean = 60.8695652173913)
Bin #2: [9.953199768066407,19.90639953613281) (n = 21) (mean = 76.19047619047619)
Bin #3: [19.90639953613281,29.85959930419921) (n = 20) (mean = 70)
Bin #4: [29.85959930419921,39.81279907226562) (n = 16) (mean = 56.25)
Bin #5: [39.81279907226562,49.76599884033202) (n = 8) (mean = 75)
Bin #6: [49.76599884033202,59.71919860839842) (n = 11) (mean = 90.90909090909091)
Bin #7: [59.71919860839842,69.67239837646483) (n = 5) (mean = 100)
Bin #8: [69.67239837646483,79.62559814453124) (n = 5) (mean = 100)
Bin #9: [79.62559814453124,89.57879791259765) (n = 6) (mean = 100)
Bin #10: [89.57879791259765,99.53199768066406] (n = 7) (mean = 57.14285714285715)
{txt}
{com}. graph save figure1, replace
{txt}(note: file figure1.gph not found)
{res}{txt}(file figure1.gph saved)

{com}. drop fpcomplier100
{txt}
{com}. 
. 
. 
. /// Replication of Figure 2 /// 
> 
. foreach i in votes_share_04 votes_share_08 {c -(}
{txt}  2{com}. cmogram `i' dist if dist<=100 & dist>=-100, cut(0) cutright scatter line(0) lfitci  histopts(bin(100)) graphopts(xtitle(distance to eligibility threshold (000s inhabitants))) 
{txt}  3{com}. graph save rdd_`i', replace
{txt}  4{com}. {c )-}

Plotting mean of votes_share_04, conditional on dist.

n = 2857

Bin #1: [-98.98000335693359,-97.9925333404541) (n = 15) (mean = 56.4689936319987)
Bin #2: [-97.9925333404541,-97.00506332397461) (n = 32) (mean = 62.3205885887146)
Bin #3: [-97.00506332397461,-96.01759330749512) (n = 22) (mean = 53.51814703507857)
Bin #4: [-96.01759330749512,-95.03012329101563) (n = 25) (mean = 54.98417678833007)
Bin #5: [-95.03012329101563,-94.04265327453614) (n = 25) (mean = 51.48657234191894)
Bin #6: [-94.04265327453614,-93.05518325805664) (n = 12) (mean = 49.08874320983887)
Bin #7: [-93.05518325805664,-92.06771324157715) (n = 14) (mean = 50.39590263366699)
Bin #8: [-92.06771324157715,-91.08024322509766) (n = 8) (mean = 60.47127628326416)
Bin #9: [-91.08024322509766,-90.09277320861817) (n = 7) (mean = 52.94849831717355)
Bin #10: [-90.09277320861817,-89.10530319213868) (n = 12) (mean = 50.79974683125814)
Bin #11: [-89.10530319213868,-88.11783317565919) (n = 10) (mean = 43.5419677734375)
Bin #12: [-88.11783317565919,-87.13036315917969) (n = 7) (mean = 56.31808635166713)
Bin #13: [-87.13036315917969,-86.1428931427002) (n = 4) (mean = 55.71665287017822)
Bin #14: [-86.1428931427002,-85.15542312622071) (n = 9) (mean = 56.29406950208876)
Bin #15: [-85.15542312622071,-84.16795310974122) (n = 7) (mean = 48.8515259878976)
Bin #16: [-84.16795310974122,-83.18048309326173) (n = 7) (mean = 48.6452522277832)
Bin #17: [-83.18048309326173,-82.19301307678224) (n = 3) (mean = 62.09613037109375)
Bin #18: [-82.19301307678224,-81.20554306030274) (n = 5) (mean = 50.41824035644531)
Bin #19: [-81.20554306030274,-80.21807304382325) (n = 5) (mean = 53.19830627441407)
Bin #20: [-80.21807304382325,-79.23060302734376) (n = 5) (mean = 62.48504638671875)
Bin #21: [-79.23060302734376,-78.24313301086427) (n = 2) (mean = 54.58393859863281)
Bin #22: [-78.24313301086427,-77.25566299438478) (n = 4) (mean = 51.53398323059082)
Bin #23: [-77.25566299438478,-76.26819297790529) (n = 2) (mean = 49.60972785949707)
Bin #24: [-76.26819297790529,-75.28072296142579) (n = 2) (mean = 52.24538993835449)
Bin #25: [-75.28072296142579,-74.2932529449463) (n = 1) (mean = 40.9561767578125)
Bin #26: [-74.2932529449463,-73.30578292846681) (n = 1) (mean = 42.27207183837891)
Bin #27: [-73.30578292846681,-72.31831291198732) (n = 3) (mean = 51.39271545410156)
Bin #28: [-72.31831291198732,-71.33084289550783) (n = 2) (mean = 43.52420043945313)
Bin #29: [-71.33084289550783,-70.34337287902834) (n = 2) (mean = 40.18602561950684)
Bin #30: [-70.34337287902834,-69.35590286254885) (n = 3) (mean = 53.44739278157552)
Bin #31: [-69.35590286254885,-68.36843284606935) (n = 19) (mean = 62.24548219379626)
Bin #32: [-68.36843284606935,-67.38096282958986) (n = 126) (mean = 57.48764964512416)
Bin #33: [-67.38096282958986,-66.39349281311037) (n = 190) (mean = 55.13298952203048)
Bin #34: [-66.39349281311037,-65.40602279663088) (n = 218) (mean = 55.08893407594174)
Bin #35: [-65.40602279663088,-64.41855278015139) (n = 178) (mean = 56.19901773902807)
Bin #36: [-64.41855278015139,-63.4310827636719) (n = 151) (mean = 54.41752695247827)
Bin #37: [-63.4310827636719,-62.44361274719241) (n = 141) (mean = 54.41950035095215)
Bin #38: [-62.44361274719241,-61.45614273071292) (n = 116) (mean = 52.63812510720615)
Bin #39: [-61.45614273071292,-60.46867271423343) (n = 99) (mean = 53.07356277619949)
Bin #40: [-60.46867271423343,-59.48120269775394) (n = 88) (mean = 52.61082438989119)
Bin #41: [-59.48120269775394,-58.49373268127445) (n = 92) (mean = 53.31376805512802)
Bin #42: [-58.49373268127445,-57.50626266479496) (n = 86) (mean = 51.38733639827994)
Bin #43: [-57.50626266479496,-56.51879264831547) (n = 79) (mean = 52.79366278346581)
Bin #44: [-56.51879264831547,-55.53132263183598) (n = 76) (mean = 52.86431714108116)
Bin #45: [-55.53132263183598,-54.54385261535649) (n = 72) (mean = 54.46612448162503)
Bin #46: [-54.54385261535649,-53.556382598877) (n = 58) (mean = 52.06894065593851)
Bin #47: [-53.556382598877,-52.56891258239751) (n = 59) (mean = 51.38290502257266)
Bin #48: [-52.56891258239751,-51.58144256591802) (n = 48) (mean = 51.9286093711853)
Bin #49: [-51.58144256591802,-50.59397254943853) (n = 44) (mean = 52.4429896961559)
Bin #50: [-50.59397254943853,-49.60650253295904) (n = 48) (mean = 53.27263538042704)
Bin #51: [-49.60650253295904,-48.61903251647955) (n = 38) (mean = 54.6564278853567)
Bin #52: [-48.61903251647955,-47.63156250000006) (n = 40) (mean = 49.91496167182923)
Bin #53: [-47.63156250000006,-46.64409248352057) (n = 31) (mean = 54.24493063649824)
Bin #54: [-46.64409248352057,-45.65662246704108) (n = 22) (mean = 49.40050194480202)
Bin #55: [-45.65662246704108,-44.66915245056159) (n = 32) (mean = 51.54440474510193)
Bin #56: [-44.66915245056159,-43.6816824340821) (n = 21) (mean = 51.01139504568918)
Bin #57: [-43.6816824340821,-42.69421241760261) (n = 22) (mean = 54.68065209822221)
Bin #58: [-42.69421241760261,-41.70674240112312) (n = 32) (mean = 50.23602509498596)
Bin #59: [-41.70674240112312,-40.71927238464363) (n = 22) (mean = 50.89443813670766)
Bin #60: [-40.71927238464363,-39.73180236816414) (n = 16) (mean = 53.1761155128479)
Bin #61: [-39.73180236816414,-38.74433235168465) (n = 16) (mean = 51.74894058704376)
Bin #62: [-38.74433235168465,-37.75686233520516) (n = 18) (mean = 52.58178679148356)
Bin #63: [-37.75686233520516,-36.76939231872567) (n = 17) (mean = 51.23419817756204)
Bin #64: [-36.76939231872567,-35.78192230224618) (n = 10) (mean = 55.8911376953125)
Bin #65: [-35.78192230224618,-34.79445228576669) (n = 17) (mean = 48.05271115022547)
Bin #66: [-34.79445228576669,-33.8069822692872) (n = 14) (mean = 51.25056076049805)
Bin #67: [-33.8069822692872,-32.81951225280771) (n = 9) (mean = 58.47430419921875)
Bin #68: [-32.81951225280771,-31.83204223632822) (n = 12) (mean = 45.07508087158203)
Bin #69: [-31.83204223632822,-30.84457221984873) (n = 8) (mean = 49.44539594650269)
Bin #70: [-30.84457221984873,-29.85710220336924) (n = 8) (mean = 52.2229642868042)
Bin #71: [-29.85710220336924,-28.86963218688975) (n = 9) (mean = 48.20126173231337)
Bin #72: [-28.86963218688975,-27.88216217041026) (n = 11) (mean = 48.17928244850852)
Bin #73: [-27.88216217041026,-26.89469215393077) (n = 9) (mean = 46.17109086778429)
Bin #74: [-26.89469215393077,-25.90722213745128) (n = 5) (mean = 55.01617813110352)
Bin #75: [-25.90722213745128,-24.91975212097179) (n = 1) (mean = 81.67156219482422)
Bin #76: [-24.91975212097179,-23.9322821044923) (n = 6) (mean = 44.57249069213867)
Bin #77: [-23.9322821044923,-22.94481208801281) (n = 1) (mean = 61.77911758422852)
Bin #78: [-22.94481208801281,-21.95734207153332) (n = 2) (mean = 37.80959320068359)
Bin #79: [-21.95734207153332,-20.96987205505383) (n = 7) (mean = 51.78280912126814)
Bin #80: [-20.96987205505383,-19.98240203857434) (n = 3) (mean = 38.15698496500651)
Bin #81: [-19.98240203857434,-18.99493202209485) (n = 1) (mean = 54.92066192626953)
Bin #82: [-18.99493202209485,-18.00746200561536) (n = 4) (mean = 53.87623596191406)
Bin #83: [-18.00746200561536,-17.01999198913587) (n = 1) (mean = 36.64223861694336)
Bin #84: [-17.01999198913587,-16.03252197265638) (n = 3) (mean = 50.57563908894857)
Bin #85: [-16.03252197265638,-15.04505195617689) (n = 4) (mean = 46.61669731140137)
Bin #86: [-15.04505195617689,-14.0575819396974) (n = 0) (mean = .)
Bin #87: [-14.0575819396974,-13.07011192321791) (n = 2) (mean = 45.50835990905762)
Bin #88: [-13.07011192321791,-12.08264190673842) (n = 1) (mean = 58.92261505126953)
Bin #89: [-12.08264190673842,-11.09517189025893) (n = 0) (mean = .)
Bin #90: [-11.09517189025893,-10.10770187377944) (n = 0) (mean = .)
Bin #91: [-10.10770187377944,-9.120231857299949) (n = 3) (mean = 44.64621734619141)
Bin #92: [-9.120231857299949,-8.132761840820457) (n = 1) (mean = 49.81716537475586)
Bin #93: [-8.132761840820457,-7.145291824340965) (n = 1) (mean = 62.72512817382813)
Bin #94: [-7.145291824340965,-6.157821807861472) (n = 2) (mean = 51.54586791992188)
Bin #95: [-6.157821807861472,-5.17035179138198) (n = 1) (mean = 47.50749588012695)
Bin #96: [-5.17035179138198,-4.182881774902487) (n = 1) (mean = 42.37957382202148)
Bin #97: [-4.182881774902487,-3.195411758422995) (n = 2) (mean = 54.12963676452637)
Bin #98: [-3.195411758422995,-2.207941741943503) (n = 3) (mean = 45.79655583699545)
Bin #99: [-2.207941741943503,-1.220471725464011) (n = 1) (mean = 64.11986541748047)
Bin #100: [-1.220471725464011,-.233001708984375) (n = 0) (mean = .)
Bin #1: [0,.9953199768066406) (n = 4) (mean = 54.88712310791016)
Bin #2: [.9953199768066406,1.990639953613281) (n = 2) (mean = 56.19001579284668)
Bin #3: [1.990639953613281,2.985959930419922) (n = 1) (mean = 58.440673828125)
Bin #4: [2.985959930419922,3.981279907226563) (n = 2) (mean = 49.69647216796875)
Bin #5: [3.981279907226563,4.976599884033203) (n = 4) (mean = 48.12968730926514)
Bin #6: [4.976599884033203,5.971919860839844) (n = 3) (mean = 44.20173263549805)
Bin #7: [5.971919860839844,6.967239837646484) (n = 1) (mean = 55.23163604736328)
Bin #8: [6.967239837646484,7.962559814453124) (n = 0) (mean = .)
Bin #9: [7.962559814453124,8.957879791259765) (n = 4) (mean = 50.61106014251709)
Bin #10: [8.957879791259765,9.953199768066407) (n = 2) (mean = 45.44975471496582)
Bin #11: [9.953199768066407,10.94851974487305) (n = 1) (mean = 25.12905311584473)
Bin #12: [10.94851974487305,11.94383972167969) (n = 2) (mean = 52.39309692382813)
Bin #13: [11.94383972167969,12.93915969848633) (n = 3) (mean = 51.38486099243164)
Bin #14: [12.93915969848633,13.93447967529297) (n = 4) (mean = 48.77073669433594)
Bin #15: [13.93447967529297,14.92979965209961) (n = 3) (mean = 51.64225896199545)
Bin #16: [14.92979965209961,15.92511962890625) (n = 3) (mean = 59.13528315226237)
Bin #17: [15.92511962890625,16.92043960571289) (n = 1) (mean = 49.70322036743164)
Bin #18: [16.92043960571289,17.91575958251953) (n = 1) (mean = 44.93473052978516)
Bin #19: [17.91575958251953,18.91107955932617) (n = 1) (mean = 63.5861701965332)
Bin #20: [18.91107955932617,19.90639953613281) (n = 2) (mean = 36.52273559570313)
Bin #21: [19.90639953613281,20.90171951293945) (n = 1) (mean = 53.19246292114258)
Bin #22: [20.90171951293945,21.89703948974609) (n = 6) (mean = 49.15794531504313)
Bin #23: [21.89703948974609,22.89235946655273) (n = 1) (mean = 57.34326553344727)
Bin #24: [22.89235946655273,23.88767944335937) (n = 1) (mean = 43.24160003662109)
Bin #25: [23.88767944335937,24.88299942016601) (n = 2) (mean = 51.314697265625)
Bin #26: [24.88299942016601,25.87831939697265) (n = 3) (mean = 47.23720423380534)
Bin #27: [25.87831939697265,26.87363937377929) (n = 3) (mean = 38.37806002298991)
Bin #28: [26.87363937377929,27.86895935058593) (n = 2) (mean = 52.38181495666504)
Bin #29: [27.86895935058593,28.86427932739257) (n = 0) (mean = .)
Bin #30: [28.86427932739257,29.85959930419921) (n = 1) (mean = 55.25238418579102)
Bin #31: [29.85959930419921,30.85491928100585) (n = 2) (mean = 47.4221248626709)
Bin #32: [30.85491928100585,31.85023925781249) (n = 1) (mean = 46.48015594482422)
Bin #33: [31.85023925781249,32.84555923461913) (n = 1) (mean = 48.93317794799805)
Bin #34: [32.84555923461913,33.84087921142577) (n = 3) (mean = 48.89348220825195)
Bin #35: [33.84087921142577,34.83619918823241) (n = 2) (mean = 44.61580467224121)
Bin #36: [34.83619918823241,35.83151916503905) (n = 3) (mean = 50.78256861368815)
Bin #37: [35.83151916503905,36.82683914184569) (n = 1) (mean = 51.98671340942383)
Bin #38: [36.82683914184569,37.82215911865233) (n = 1) (mean = 56.51396560668945)
Bin #39: [37.82215911865233,38.81747909545897) (n = 2) (mean = 51.32577896118164)
Bin #40: [38.81747909545897,39.81279907226561) (n = 0) (mean = .)
Bin #41: [39.81279907226561,40.80811904907225) (n = 1) (mean = 49.95124053955078)
Bin #42: [40.80811904907225,41.80343902587889) (n = 0) (mean = .)
Bin #43: [41.80343902587889,42.79875900268553) (n = 1) (mean = 37.033203125)
Bin #44: [42.79875900268553,43.79407897949217) (n = 1) (mean = 35.50717926025391)
Bin #45: [43.79407897949217,44.78939895629881) (n = 1) (mean = 52.75235366821289)
Bin #46: [44.78939895629881,45.78471893310545) (n = 1) (mean = 46.42067718505859)
Bin #47: [45.78471893310545,46.78003890991209) (n = 0) (mean = .)
Bin #48: [46.78003890991209,47.77535888671873) (n = 0) (mean = .)
Bin #49: [47.77535888671873,48.77067886352537) (n = 1) (mean = 39.55046463012695)
Bin #50: [48.77067886352537,49.76599884033201) (n = 2) (mean = 37.23330593109131)
Bin #51: [49.76599884033201,50.76131881713865) (n = 2) (mean = 39.69149589538574)
Bin #52: [50.76131881713865,51.75663879394529) (n = 1) (mean = 60.21787643432617)
Bin #53: [51.75663879394529,52.75195877075193) (n = 1) (mean = 48.97084045410156)
Bin #54: [52.75195877075193,53.74727874755857) (n = 0) (mean = .)
Bin #55: [53.74727874755857,54.74259872436521) (n = 1) (mean = 37.80710601806641)
Bin #56: [54.74259872436521,55.73791870117185) (n = 1) (mean = 45.53040313720703)
Bin #57: [55.73791870117185,56.73323867797849) (n = 1) (mean = 48.02587509155273)
Bin #58: [56.73323867797849,57.72855865478513) (n = 1) (mean = 60.05180740356445)
Bin #59: [57.72855865478513,58.72387863159177) (n = 1) (mean = 49.75542831420898)
Bin #60: [58.72387863159177,59.71919860839841) (n = 2) (mean = 48.59739112854004)
Bin #61: [59.71919860839841,60.71451858520505) (n = 0) (mean = .)
Bin #62: [60.71451858520505,61.70983856201169) (n = 0) (mean = .)
Bin #63: [61.70983856201169,62.70515853881833) (n = 1) (mean = 38.24062347412109)
Bin #64: [62.70515853881833,63.70047851562497) (n = 1) (mean = 35.28855133056641)
Bin #65: [63.70047851562497,64.69579849243161) (n = 1) (mean = 49.72909927368164)
Bin #66: [64.69579849243161,65.69111846923825) (n = 0) (mean = .)
Bin #67: [65.69111846923825,66.68643844604489) (n = 2) (mean = 37.32619476318359)
Bin #68: [66.68643844604489,67.68175842285153) (n = 0) (mean = .)
Bin #69: [67.68175842285153,68.67707839965817) (n = 0) (mean = .)
Bin #70: [68.67707839965817,69.67239837646481) (n = 0) (mean = .)
Bin #71: [69.67239837646481,70.66771835327145) (n = 1) (mean = 48.76638031005859)
Bin #72: [70.66771835327145,71.66303833007809) (n = 2) (mean = 54.69224166870117)
Bin #73: [71.66303833007809,72.65835830688474) (n = 0) (mean = .)
Bin #74: [72.65835830688474,73.65367828369138) (n = 1) (mean = 54.6077995300293)
Bin #75: [73.65367828369138,74.64899826049802) (n = 1) (mean = 42.36488723754883)
Bin #76: [74.64899826049802,75.64431823730466) (n = 0) (mean = .)
Bin #77: [75.64431823730466,76.6396382141113) (n = 0) (mean = .)
Bin #78: [76.6396382141113,77.63495819091794) (n = 0) (mean = .)
Bin #79: [77.63495819091794,78.63027816772458) (n = 0) (mean = .)
Bin #80: [78.63027816772458,79.62559814453122) (n = 0) (mean = .)
Bin #81: [79.62559814453122,80.62091812133787) (n = 0) (mean = .)
Bin #82: [80.62091812133787,81.61623809814451) (n = 0) (mean = .)
Bin #83: [81.61623809814451,82.61155807495115) (n = 2) (mean = 44.08916854858398)
Bin #84: [82.61155807495115,83.60687805175779) (n = 2) (mean = 47.06356239318848)
Bin #85: [83.60687805175779,84.60219802856443) (n = 1) (mean = 49.3366584777832)
Bin #86: [84.60219802856443,85.59751800537107) (n = 0) (mean = .)
Bin #87: [85.59751800537107,86.59283798217771) (n = 0) (mean = .)
Bin #88: [86.59283798217771,87.58815795898435) (n = 1) (mean = 65.02880859375)
Bin #89: [87.58815795898435,88.583477935791) (n = 0) (mean = .)
Bin #90: [88.583477935791,89.57879791259764) (n = 0) (mean = .)
Bin #91: [89.57879791259764,90.57411788940428) (n = 1) (mean = 47.80197525024414)
Bin #92: [90.57411788940428,91.56943786621092) (n = 0) (mean = .)
Bin #93: [91.56943786621092,92.56475784301756) (n = 1) (mean = 54.15365600585938)
Bin #94: [92.56475784301756,93.5600778198242) (n = 0) (mean = .)
Bin #95: [93.5600778198242,94.55539779663084) (n = 1) (mean = 35.90523529052734)
Bin #96: [94.55539779663084,95.55071777343748) (n = 2) (mean = 46.49073028564453)
Bin #97: [95.55071777343748,96.54603775024412) (n = 1) (mean = 43.46649551391602)
Bin #98: [96.54603775024412,97.54135772705077) (n = 0) (mean = .)
Bin #99: [97.54135772705077,98.53667770385741) (n = 0) (mean = .)
Bin #100: [98.53667770385741,99.53199768066406] (n = 1) (mean = 53.40902328491211)
{txt}(note: file rdd_votes_share_04.gph not found)
{res}{txt}(file rdd_votes_share_04.gph saved)

Plotting mean of votes_share_08, conditional on dist.

n = 2857

Bin #1: [-98.98000335693359,-97.9925333404541) (n = 15) (mean = 66.66052652994792)
Bin #2: [-97.9925333404541,-97.00506332397461) (n = 32) (mean = 63.41892695426941)
Bin #3: [-97.00506332397461,-96.01759330749512) (n = 22) (mean = 64.63967444679953)
Bin #4: [-96.01759330749512,-95.03012329101563) (n = 25) (mean = 57.6189900970459)
Bin #5: [-95.03012329101563,-94.04265327453614) (n = 25) (mean = 65.34515350341798)
Bin #6: [-94.04265327453614,-93.05518325805664) (n = 12) (mean = 58.82302061716715)
Bin #7: [-93.05518325805664,-92.06771324157715) (n = 14) (mean = 55.27883911132813)
Bin #8: [-92.06771324157715,-91.08024322509766) (n = 8) (mean = 49.25890123844147)
Bin #9: [-91.08024322509766,-90.09277320861817) (n = 7) (mean = 50.97243390764509)
Bin #10: [-90.09277320861817,-89.10530319213868) (n = 12) (mean = 56.81083297729492)
Bin #11: [-89.10530319213868,-88.11783317565919) (n = 10) (mean = 54.5774341583252)
Bin #12: [-88.11783317565919,-87.13036315917969) (n = 7) (mean = 53.257689339774)
Bin #13: [-87.13036315917969,-86.1428931427002) (n = 4) (mean = 59.8204984664917)
Bin #14: [-86.1428931427002,-85.15542312622071) (n = 9) (mean = 55.10065036349826)
Bin #15: [-85.15542312622071,-84.16795310974122) (n = 7) (mean = 45.16702842712402)
Bin #16: [-84.16795310974122,-83.18048309326173) (n = 7) (mean = 52.40700040544782)
Bin #17: [-83.18048309326173,-82.19301307678224) (n = 3) (mean = 64.68450673421223)
Bin #18: [-82.19301307678224,-81.20554306030274) (n = 5) (mean = 44.91737594604492)
Bin #19: [-81.20554306030274,-80.21807304382325) (n = 5) (mean = 51.37517623901367)
Bin #20: [-80.21807304382325,-79.23060302734376) (n = 5) (mean = 63.70954360961914)
Bin #21: [-79.23060302734376,-78.24313301086427) (n = 2) (mean = 76.73151397705078)
Bin #22: [-78.24313301086427,-77.25566299438478) (n = 4) (mean = 50.95172643661499)
Bin #23: [-77.25566299438478,-76.26819297790529) (n = 2) (mean = 61.92659568786621)
Bin #24: [-76.26819297790529,-75.28072296142579) (n = 2) (mean = 56.01106071472168)
Bin #25: [-75.28072296142579,-74.2932529449463) (n = 1) (mean = 47.10396194458008)
Bin #26: [-74.2932529449463,-73.30578292846681) (n = 1) (mean = 63.00701141357422)
Bin #27: [-73.30578292846681,-72.31831291198732) (n = 3) (mean = 59.9715461730957)
Bin #28: [-72.31831291198732,-71.33084289550783) (n = 2) (mean = 49.62811088562012)
Bin #29: [-71.33084289550783,-70.34337287902834) (n = 2) (mean = 52.96419525146484)
Bin #30: [-70.34337287902834,-69.35590286254885) (n = 3) (mean = 57.7289301554362)
Bin #31: [-69.35590286254885,-68.36843284606935) (n = 19) (mean = 61.35940150210732)
Bin #32: [-68.36843284606935,-67.38096282958986) (n = 126) (mean = 59.69083746652755)
Bin #33: [-67.38096282958986,-66.39349281311037) (n = 190) (mean = 55.26495149010106)
Bin #34: [-66.39349281311037,-65.40602279663088) (n = 218) (mean = 55.16853654056514)
Bin #35: [-65.40602279663088,-64.41855278015139) (n = 178) (mean = 54.47870101285785)
Bin #36: [-64.41855278015139,-63.4310827636719) (n = 151) (mean = 53.57392764565171)
Bin #37: [-63.4310827636719,-62.44361274719241) (n = 141) (mean = 52.58257247708368)
Bin #38: [-62.44361274719241,-61.45614273071292) (n = 116) (mean = 50.6624106045427)
Bin #39: [-61.45614273071292,-60.46867271423343) (n = 99) (mean = 53.0124946555706)
Bin #40: [-60.46867271423343,-59.48120269775394) (n = 88) (mean = 50.74298239837993)
Bin #41: [-59.48120269775394,-58.49373268127445) (n = 92) (mean = 54.31883211919795)
Bin #42: [-58.49373268127445,-57.50626266479496) (n = 86) (mean = 49.34247845272685)
Bin #43: [-57.50626266479496,-56.51879264831547) (n = 79) (mean = 51.34884130502049)
Bin #44: [-56.51879264831547,-55.53132263183598) (n = 76) (mean = 51.20486216796072)
Bin #45: [-55.53132263183598,-54.54385261535649) (n = 72) (mean = 49.38469207286835)
Bin #46: [-54.54385261535649,-53.556382598877) (n = 58) (mean = 51.148930311203)
Bin #47: [-53.556382598877,-52.56891258239751) (n = 59) (mean = 51.37787883564577)
Bin #48: [-52.56891258239751,-51.58144256591802) (n = 48) (mean = 51.80398082733154)
Bin #49: [-51.58144256591802,-50.59397254943853) (n = 44) (mean = 51.48953786763278)
Bin #50: [-50.59397254943853,-49.60650253295904) (n = 48) (mean = 52.59436893463135)
Bin #51: [-49.60650253295904,-48.61903251647955) (n = 38) (mean = 58.19012887854325)
Bin #52: [-48.61903251647955,-47.63156250000006) (n = 40) (mean = 50.16741629838943)
Bin #53: [-47.63156250000006,-46.64409248352057) (n = 31) (mean = 51.09400324667654)
Bin #54: [-46.64409248352057,-45.65662246704108) (n = 22) (mean = 51.63745238564231)
Bin #55: [-45.65662246704108,-44.66915245056159) (n = 32) (mean = 50.98105102777481)
Bin #56: [-44.66915245056159,-43.6816824340821) (n = 21) (mean = 52.35855206989107)
Bin #57: [-43.6816824340821,-42.69421241760261) (n = 22) (mean = 50.04175827719948)
Bin #58: [-42.69421241760261,-41.70674240112312) (n = 32) (mean = 49.24190011620522)
Bin #59: [-41.70674240112312,-40.71927238464363) (n = 22) (mean = 47.81863570213318)
Bin #60: [-40.71927238464363,-39.73180236816414) (n = 16) (mean = 56.49390769004822)
Bin #61: [-39.73180236816414,-38.74433235168465) (n = 16) (mean = 45.79387807846069)
Bin #62: [-38.74433235168465,-37.75686233520516) (n = 18) (mean = 52.31764178805881)
Bin #63: [-37.75686233520516,-36.76939231872567) (n = 17) (mean = 49.08881007923799)
Bin #64: [-36.76939231872567,-35.78192230224618) (n = 10) (mean = 53.54767894744873)
Bin #65: [-35.78192230224618,-34.79445228576669) (n = 17) (mean = 39.29033122343176)
Bin #66: [-34.79445228576669,-33.8069822692872) (n = 14) (mean = 52.06764916011265)
Bin #67: [-33.8069822692872,-32.81951225280771) (n = 9) (mean = 51.32307646009657)
Bin #68: [-32.81951225280771,-31.83204223632822) (n = 12) (mean = 50.19004964828491)
Bin #69: [-31.83204223632822,-30.84457221984873) (n = 8) (mean = 53.66103410720825)
Bin #70: [-30.84457221984873,-29.85710220336924) (n = 8) (mean = 57.55421113967896)
Bin #71: [-29.85710220336924,-28.86963218688975) (n = 9) (mean = 41.27705807156033)
Bin #72: [-28.86963218688975,-27.88216217041026) (n = 11) (mean = 53.58386785333807)
Bin #73: [-27.88216217041026,-26.89469215393077) (n = 9) (mean = 46.5940072801378)
Bin #74: [-26.89469215393077,-25.90722213745128) (n = 5) (mean = 43.29078521728515)
Bin #75: [-25.90722213745128,-24.91975212097179) (n = 1) (mean = 72.94343566894531)
Bin #76: [-24.91975212097179,-23.9322821044923) (n = 6) (mean = 49.86684290568034)
Bin #77: [-23.9322821044923,-22.94481208801281) (n = 1) (mean = 63.2504768371582)
Bin #78: [-22.94481208801281,-21.95734207153332) (n = 2) (mean = 36.3883171081543)
Bin #79: [-21.95734207153332,-20.96987205505383) (n = 7) (mean = 45.15288557325091)
Bin #80: [-20.96987205505383,-19.98240203857434) (n = 3) (mean = 60.81305185953776)
Bin #81: [-19.98240203857434,-18.99493202209485) (n = 1) (mean = 46.20919036865234)
Bin #82: [-18.99493202209485,-18.00746200561536) (n = 4) (mean = 60.67928838729858)
Bin #83: [-18.00746200561536,-17.01999198913587) (n = 1) (mean = 51.80559539794922)
Bin #84: [-17.01999198913587,-16.03252197265638) (n = 3) (mean = 51.44278462727865)
Bin #85: [-16.03252197265638,-15.04505195617689) (n = 4) (mean = 48.41557025909424)
Bin #86: [-15.04505195617689,-14.0575819396974) (n = 0) (mean = .)
Bin #87: [-14.0575819396974,-13.07011192321791) (n = 2) (mean = 72.50808525085449)
Bin #88: [-13.07011192321791,-12.08264190673842) (n = 1) (mean = 54.36237716674805)
Bin #89: [-12.08264190673842,-11.09517189025893) (n = 0) (mean = .)
Bin #90: [-11.09517189025893,-10.10770187377944) (n = 0) (mean = .)
Bin #91: [-10.10770187377944,-9.120231857299949) (n = 3) (mean = 49.6653938293457)
Bin #92: [-9.120231857299949,-8.132761840820457) (n = 1) (mean = 63.2374382019043)
Bin #93: [-8.132761840820457,-7.145291824340965) (n = 1) (mean = 48.0158805847168)
Bin #94: [-7.145291824340965,-6.157821807861472) (n = 2) (mean = 57.23014640808105)
Bin #95: [-6.157821807861472,-5.17035179138198) (n = 1) (mean = 75.13004302978516)
Bin #96: [-5.17035179138198,-4.182881774902487) (n = 1) (mean = 50.4658203125)
Bin #97: [-4.182881774902487,-3.195411758422995) (n = 2) (mean = 61.06525993347168)
Bin #98: [-3.195411758422995,-2.207941741943503) (n = 3) (mean = 43.27658653259277)
Bin #99: [-2.207941741943503,-1.220471725464011) (n = 1) (mean = 50.95356750488281)
Bin #100: [-1.220471725464011,-.233001708984375) (n = 0) (mean = .)
Bin #1: [0,.9953199768066406) (n = 4) (mean = 75.41098213195801)
Bin #2: [.9953199768066406,1.990639953613281) (n = 2) (mean = 54.91774559020996)
Bin #3: [1.990639953613281,2.985959930419922) (n = 1) (mean = 67.58953094482422)
Bin #4: [2.985959930419922,3.981279907226563) (n = 2) (mean = 54.77634620666504)
Bin #5: [3.981279907226563,4.976599884033203) (n = 4) (mean = 56.79017543792725)
Bin #6: [4.976599884033203,5.971919860839844) (n = 3) (mean = 52.15106391906738)
Bin #7: [5.971919860839844,6.967239837646484) (n = 1) (mean = 46.48764801025391)
Bin #8: [6.967239837646484,7.962559814453124) (n = 0) (mean = .)
Bin #9: [7.962559814453124,8.957879791259765) (n = 4) (mean = 41.17171764373779)
Bin #10: [8.957879791259765,9.953199768066407) (n = 2) (mean = 49.36432838439941)
Bin #11: [9.953199768066407,10.94851974487305) (n = 1) (mean = 73.99597930908203)
Bin #12: [10.94851974487305,11.94383972167969) (n = 2) (mean = 55.09208679199219)
Bin #13: [11.94383972167969,12.93915969848633) (n = 3) (mean = 34.7237377166748)
Bin #14: [12.93915969848633,13.93447967529297) (n = 4) (mean = 40.90495133399963)
Bin #15: [13.93447967529297,14.92979965209961) (n = 3) (mean = 66.97544097900391)
Bin #16: [14.92979965209961,15.92511962890625) (n = 3) (mean = 76.99557749430339)
Bin #17: [15.92511962890625,16.92043960571289) (n = 1) (mean = 72.78873443603516)
Bin #18: [16.92043960571289,17.91575958251953) (n = 1) (mean = 49.23186874389648)
Bin #19: [17.91575958251953,18.91107955932617) (n = 1) (mean = 57.28990173339844)
Bin #20: [18.91107955932617,19.90639953613281) (n = 2) (mean = 51.85703468322754)
Bin #21: [19.90639953613281,20.90171951293945) (n = 1) (mean = 60.62222290039063)
Bin #22: [20.90171951293945,21.89703948974609) (n = 6) (mean = 50.93764193852743)
Bin #23: [21.89703948974609,22.89235946655273) (n = 1) (mean = 54.89582061767578)
Bin #24: [22.89235946655273,23.88767944335937) (n = 1) (mean = 62.19891357421875)
Bin #25: [23.88767944335937,24.88299942016601) (n = 2) (mean = 46.50083446502686)
Bin #26: [24.88299942016601,25.87831939697265) (n = 3) (mean = 49.93561681111654)
Bin #27: [25.87831939697265,26.87363937377929) (n = 3) (mean = 47.35605112711588)
Bin #28: [26.87363937377929,27.86895935058593) (n = 2) (mean = 78.88899040222168)
Bin #29: [27.86895935058593,28.86427932739257) (n = 0) (mean = .)
Bin #30: [28.86427932739257,29.85959930419921) (n = 1) (mean = 81.30810546875)
Bin #31: [29.85959930419921,30.85491928100585) (n = 2) (mean = 47.75706100463867)
Bin #32: [30.85491928100585,31.85023925781249) (n = 1) (mean = 44.56557083129883)
Bin #33: [31.85023925781249,32.84555923461913) (n = 1) (mean = 56.93107986450195)
Bin #34: [32.84555923461913,33.84087921142577) (n = 3) (mean = 50.0624262491862)
Bin #35: [33.84087921142577,34.83619918823241) (n = 2) (mean = 53.34430503845215)
Bin #36: [34.83619918823241,35.83151916503905) (n = 3) (mean = 59.95233917236328)
Bin #37: [35.83151916503905,36.82683914184569) (n = 1) (mean = 88.019775390625)
Bin #38: [36.82683914184569,37.82215911865233) (n = 1) (mean = 56.19933319091797)
Bin #39: [37.82215911865233,38.81747909545897) (n = 2) (mean = 50.94196701049805)
Bin #40: [38.81747909545897,39.81279907226561) (n = 0) (mean = .)
Bin #41: [39.81279907226561,40.80811904907225) (n = 1) (mean = 22.00139999389648)
Bin #42: [40.80811904907225,41.80343902587889) (n = 0) (mean = .)
Bin #43: [41.80343902587889,42.79875900268553) (n = 1) (mean = 74.1639404296875)
Bin #44: [42.79875900268553,43.79407897949217) (n = 1) (mean = 62.67749786376953)
Bin #45: [43.79407897949217,44.78939895629881) (n = 1) (mean = 46.3166389465332)
Bin #46: [44.78939895629881,45.78471893310545) (n = 1) (mean = 45.47645950317383)
Bin #47: [45.78471893310545,46.78003890991209) (n = 0) (mean = .)
Bin #48: [46.78003890991209,47.77535888671873) (n = 0) (mean = .)
Bin #49: [47.77535888671873,48.77067886352537) (n = 1) (mean = 47.07132339477539)
Bin #50: [48.77067886352537,49.76599884033201) (n = 2) (mean = 55.69367504119873)
Bin #51: [49.76599884033201,50.76131881713865) (n = 2) (mean = 56.59504890441895)
Bin #52: [50.76131881713865,51.75663879394529) (n = 1) (mean = 35.32439422607422)
Bin #53: [51.75663879394529,52.75195877075193) (n = 1) (mean = 49.66363906860352)
Bin #54: [52.75195877075193,53.74727874755857) (n = 0) (mean = .)
Bin #55: [53.74727874755857,54.74259872436521) (n = 1) (mean = 31.28832817077637)
Bin #56: [54.74259872436521,55.73791870117185) (n = 1) (mean = 54.45303726196289)
Bin #57: [55.73791870117185,56.73323867797849) (n = 1) (mean = 98.68550872802734)
Bin #58: [56.73323867797849,57.72855865478513) (n = 1) (mean = 34.47689437866211)
Bin #59: [57.72855865478513,58.72387863159177) (n = 1) (mean = 53.76799774169922)
Bin #60: [58.72387863159177,59.71919860839841) (n = 2) (mean = 40.18243026733398)
Bin #61: [59.71919860839841,60.71451858520505) (n = 0) (mean = .)
Bin #62: [60.71451858520505,61.70983856201169) (n = 0) (mean = .)
Bin #63: [61.70983856201169,62.70515853881833) (n = 1) (mean = 37.14228439331055)
Bin #64: [62.70515853881833,63.70047851562497) (n = 1) (mean = 61.7093391418457)
Bin #65: [63.70047851562497,64.69579849243161) (n = 1) (mean = 32.7840690612793)
Bin #66: [64.69579849243161,65.69111846923825) (n = 0) (mean = .)
Bin #67: [65.69111846923825,66.68643844604489) (n = 2) (mean = 55.91922950744629)
Bin #68: [66.68643844604489,67.68175842285153) (n = 0) (mean = .)
Bin #69: [67.68175842285153,68.67707839965817) (n = 0) (mean = .)
Bin #70: [68.67707839965817,69.67239837646481) (n = 0) (mean = .)
Bin #71: [69.67239837646481,70.66771835327145) (n = 1) (mean = 62.41273498535156)
Bin #72: [70.66771835327145,71.66303833007809) (n = 2) (mean = 46.53905487060547)
Bin #73: [71.66303833007809,72.65835830688474) (n = 0) (mean = .)
Bin #74: [72.65835830688474,73.65367828369138) (n = 1) (mean = 64.21103668212891)
Bin #75: [73.65367828369138,74.64899826049802) (n = 1) (mean = 47.69753265380859)
Bin #76: [74.64899826049802,75.64431823730466) (n = 0) (mean = .)
Bin #77: [75.64431823730466,76.6396382141113) (n = 0) (mean = .)
Bin #78: [76.6396382141113,77.63495819091794) (n = 0) (mean = .)
Bin #79: [77.63495819091794,78.63027816772458) (n = 0) (mean = .)
Bin #80: [78.63027816772458,79.62559814453122) (n = 0) (mean = .)
Bin #81: [79.62559814453122,80.62091812133787) (n = 0) (mean = .)
Bin #82: [80.62091812133787,81.61623809814451) (n = 0) (mean = .)
Bin #83: [81.61623809814451,82.61155807495115) (n = 2) (mean = 59.53583908081055)
Bin #84: [82.61155807495115,83.60687805175779) (n = 2) (mean = 42.45074081420898)
Bin #85: [83.60687805175779,84.60219802856443) (n = 1) (mean = 49.78129196166992)
Bin #86: [84.60219802856443,85.59751800537107) (n = 0) (mean = .)
Bin #87: [85.59751800537107,86.59283798217771) (n = 0) (mean = .)
Bin #88: [86.59283798217771,87.58815795898435) (n = 1) (mean = 78.74609375)
Bin #89: [87.58815795898435,88.583477935791) (n = 0) (mean = .)
Bin #90: [88.583477935791,89.57879791259764) (n = 0) (mean = .)
Bin #91: [89.57879791259764,90.57411788940428) (n = 1) (mean = 78.47384643554688)
Bin #92: [90.57411788940428,91.56943786621092) (n = 0) (mean = .)
Bin #93: [91.56943786621092,92.56475784301756) (n = 1) (mean = 44.50348663330078)
Bin #94: [92.56475784301756,93.5600778198242) (n = 0) (mean = .)
Bin #95: [93.5600778198242,94.55539779663084) (n = 1) (mean = 47.56962203979492)
Bin #96: [94.55539779663084,95.55071777343748) (n = 2) (mean = 50.01819610595703)
Bin #97: [95.55071777343748,96.54603775024412) (n = 1) (mean = 60.47585678100586)
Bin #98: [96.54603775024412,97.54135772705077) (n = 0) (mean = .)
Bin #99: [97.54135772705077,98.53667770385741) (n = 0) (mean = .)
Bin #100: [98.53667770385741,99.53199768066406] (n = 1) (mean = 73.40742492675781)
(note: file rdd_votes_share_08.gph not found)
{res}{txt}(file rdd_votes_share_08.gph saved)

{com}. gr combine ///
> rdd_votes_share_04.gph ///
> rdd_votes_share_08.gph, rows(1  )  xcom
{res}{txt}
{com}. graph save figure2, replace
{txt}(note: file figure2.gph not found)
{res}{txt}(file figure2.gph saved)

{com}. erase rdd_votes_share_04.gph 
{txt}
{com}. erase rdd_votes_share_08.gph
{txt}
{com}. 
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\up202000782\Downloads\ECOLET_18_01854_replication\ECOLET_18_01854_v3.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 3 Dec 2020, 10:35:45
{txt}{.-}
{smcl}
{txt}{sf}{ul off}